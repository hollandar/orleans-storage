@using Cadence.UI.Components
@using Webefinity.ContentRoot.IndexUI.Components
@using Webefinity.Module.Blocks.Abstractions
@using Webefinity.Module.Blocks.Components.Blocks
@using Webefinity.ContentRoot.IndexUI

@inherits BlockEditorComponentBase<HeroModel>
@attribute [BlockEditor("hero")]

<h3>Edit Hero</h3>

<EditForm @ref="editForm" Model="this.Model" OnValidSubmit="SaveModel">
    <FluentValidator TModelType="HeroModel" TValidator="HeroModelValidator" />

    <div class="field">
        <label for="text">Text</label>
        <InputTextArea rows="20" id="text" @bind-Value="Model.Text" />
        <ValidationMessage For="@(() => Model.Text)" />
    </div>

    <div class="field">
        <label for="url">Url</label>
        <InputIndexedFile type="text" id="url" @bind-Value="Model.Url" />
        <ValidationMessage For="@(() => Model.Url)" />
    </div>

    <div class="actions">
        <Button class="primary" type="button" Clicked="Apply">Apply</Button>
        <Button class="primary" type="submit">Save</Button>
        <Button class="secondary" Clicked="CancelModel">Cancel</Button>
    </div>
</EditForm>

@code {
    EditForm editForm = default!;

    protected async Task Apply()
    {
        if (editForm.EditContext?.Validate() ?? false)
        {
            await this.ApplyModel();
        }
    }
}
